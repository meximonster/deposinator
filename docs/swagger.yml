swagger: '2.0'
info:
  title: Go API
  description: API for managing users, sessions, and withdrawals
  version: 1.0.1
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /users:
    get:
      summary: Get all users
      description: Retrieve all users
      responses:
        '200':
          description: A list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/UsersResponse'
  /auth/register:
    post:
      summary: Sign up a new user
      description: Creates a new user account
      parameters:
        - in: body
          name: user
          description: The user to create
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'

  /auth/login:
    post:
      summary: Log in a user
      description: Authenticates a user and returns a token
      parameters:
        - in: body
          name: credentials
          description: The user's credentials
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'

  /auth/logout:
    delete:
      summary: Log out a user
      description: Invalidates the user's authentication token
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse'

  /sessions:
    get:
      summary: Get filtered sessions
      description: Retrieve a list of sessions based on filters
      parameters:
        - in: query
          name: issuer
          type: integer
          description: Filter by the user who created the session
        - in: query
          name: member
          type: integer
          description: Filter by a member of the session
        - in: query
          name: min_amount
          type: integer
          description: Filter by minimum session amount
        - in: query
          name: max_amount
          type: integer
          description: Filter by maximum session amount
        - in: query
          name: description
          type: string
          description: Filter by session description (partial match)
        - in: query
          name: created_after
          type: string
          format: date-time
          description: Filter sessions created after a specific timestamp
        - in: query
          name: created_before
          type: string
          format: date-time
          description: Filter sessions created before a specific timestamp
        - in: query
          name: sort_by
          type: string
          description: Sort by a field (e.g., amount, created_at)
          default: created_at
        - in: query
          name: sort_order
          type: string
          description: Sort order (asc or desc)
          default: desc
        - in: query
          name: limit
          type: integer
          description: Limit the number of results (for pagination)
          default: 10
        - in: query
          name: offset
          type: integer
          description: Offset for pagination
          default: 0
      responses:
        '200':
          description: A list of sessions
          schema:
            type: array
            items:
              $ref: '#/definitions/SessionResponse'

    post:
      summary: Create a new session
      description: Creates a new session transaction
      parameters:
        - in: body
          name: session
          description: The session to create
          required: true
          schema:
            $ref: '#/definitions/SessionCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse'

    put:
      summary: Update a session
      description: Updates an existing session transaction
      parameters:
        - in: body
          name: session
          description: The session to update
          required: true
          schema:
            $ref: '#/definitions/SessionUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse'

  /sessions/{id}:
    get:
      summary: Get a session by ID
      description: Retrieve a session by ID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The ID of the session to retrieve
      responses:
        '200':
          description: A session object
          schema:
            $ref: '#/definitions/SessionByIdResponse'

    delete:
      summary: Delete a session
      description: Deletes a session transaction by ID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The ID of the session to delete
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JSONResponse'

definitions:
  JSONResponse:
    type: object
    properties:
      status:
        type: string
      description:
        type: string

  UserResponse:
    type: object
    properties:
      status:
        type: string
      description:
        type: string
      result:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          password:
            type: string
          email:
            type: string

  UsersResponse:
    type: object
    properties:
      status:
        type: string
      description:
        type: string
      result:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            password:
              type: string
            email:
              type: string

  SessionResponse:
    type: object
    properties:
      status:
        type: string
      description:
        type: string
      result:
        type: array
        items:
          $ref: '#/definitions/SerializerResponse'

  SessionByIdResponse:
    type: object
    properties:
      status:
        type: string
      description:
        type: string
      result:
        $ref: '#/definitions/Session'

  Session:
    type: object
    properties:
      id:
        type: integer
      issuer:
        type: integer
      amount:
        type: integer
      withdraw_amount:
        type: integer
      description:
        type: string
      created_at:
        type: string
        format: date-time

  SessionCreate:
    type: object
    properties:
      issuer:
        type: integer
      members:
        type: array
        items:
          type: integer
      amount:
        type: integer
      withdraw_amount:
        type: integer
      description:
        type: string

  SessionUpdate:
    type: object
    properties:
      id:
        type: integer
      issuer:
        type: integer
      members:
        type: array
        items:
          type: integer
      amount:
        type: integer
      withdraw_amount:
        type: integer
      description:
        type: string

  SerializerResponse:
    type: object
    properties:
      id:
        type: integer
      issuer_id:
        type: integer
      issuer_username:
        type: string
      members:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
      amount:
        type: integer
      withdraw_amount:
        type: integer
      description:
        type: string
      created_at:
        type: string
